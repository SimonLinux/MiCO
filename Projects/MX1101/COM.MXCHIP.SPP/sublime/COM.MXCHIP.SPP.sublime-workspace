{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"uint",
				"uint16_t	typedef"
			],
			[
				"MICO_PA",
				"MICO_PARTITION_APPLICATION	macro"
			],
			[
				"mico_pa",
				"mico_logic_partition_t	typedef"
			],
			[
				"MICOF",
				"MICO_FLASH_NONE	mico_flash_t"
			],
			[
				"MICO_P",
				"MICO_PARTITION_PARAMETER_1	mico_partition_t"
			],
			[
				"p",
				"partition_length	uint32_t"
			],
			[
				"PAR_OPT_RE",
				"PAR_OPT_READ_WRITE	macro"
			],
			[
				"PAR",
				"PAR_OPT_NOT_ACCESSABLE	macro"
			],
			[
				"m",
				"wifi_mode	char"
			],
			[
				"MicoUA",
				"MicoUartSend(mico_uart_t uart, const void *data, uint32_t size)	OSStatus"
			],
			[
				"GPIOA",
				"GPIOA0	macro"
			],
			[
				"mico_g",
				"mico_gpio_t	typedef"
			],
			[
				"ch",
				"chunkedDataBufferLen	unsigned int"
			],
			[
				"req",
				"require_action(X, LABEL, ACTION)	macro"
			],
			[
				"c",
				"onClearCallback	OSStatus (*)(struct _HTTPHeader_t *, void *)"
			],
			[
				"kUn",
				"kUnknownErr	macro"
			],
			[
				"o",
				"onReceivedDataCallback	bool (*)(struct _HTTPHeader_t *)"
			],
			[
				"wla",
				"wLanUnConfigured	Config_State_t"
			],
			[
				"WL_",
				"WL_GPIO1_PIN	macro"
			],
			[
				"platform",
				"platform_log(M, ...)	macro"
			],
			[
				"mico",
				"mico_flash_t	typedef"
			],
			[
				"pi",
				"pin_rx	const platform_pin_mapping_t *"
			],
			[
				"MicoGpio",
				"MicoGpioEnableIRQ(mico_gpio_t gpio, mico_gpio_irq_trigger_t trigger, mico_gpio_irq_handler_t handler, void *arg)	OSStatus"
			],
			[
				"MicoGP",
				"MicoGpioEnableIRQ(mico_gpio_t gpio, mico_gpio_irq_trigger_t trigger, mico_gpio_irq_handler_t handler, void *arg)	OSStatus"
			],
			[
				"OUTPUT_OD",
				"OUTPUT_OPEN_DRAIN_NO_PULL	mico_gpio_config_t"
			],
			[
				"MICOSYS",
				"MicoSystemStandBy()	void"
			],
			[
				"MicoWd",
				"MicoWdgInitialize(uint32_t timeout)	OSStatus"
			],
			[
				"MicoR",
				"MicoRtcSetTime(mico_rtc_time_t *time)	OSStatus"
			],
			[
				"MICO_I",
				"MICO_I2C_CP	macro"
			],
			[
				"ke",
				"keyLength	int"
			],
			[
				"s",
				"security	SECURITY_TYPE_E"
			],
			[
				"MicoGpioO",
				"MicoGpioOutputLow(mico_gpio_t gpio)	OSStatus"
			],
			[
				"k",
				"kBackoffErr	macro"
			],
			[
				"mico_rtos_in",
				"mico_rtos_init_semaphore(mico_semaphore_t *semaphore, int count)	OSStatus"
			],
			[
				"tm",
				"tm_wday	int"
			],
			[
				"tm_m",
				"tm_mon	int"
			],
			[
				"tm_",
				"tm_mday	int"
			],
			[
				"mico_rtos_d",
				"mico_rtos_delete_thread(mico_thread_t *thread)	OSStatus"
			],
			[
				"MICORe",
				"MICORemoveNotification(mico_notify_types_t notify_type, void *functionAddress)	OSStatus"
			],
			[
				"I",
				"INADDR_ANY	macro"
			],
			[
				"mico_th",
				"mico_thread_sleep	macro"
			],
			[
				"MICOWlan",
				"MICOWlanEnablePowerSave	macro"
			],
			[
				"MICOWlanS",
				"MICOWlanStopEasyLink	macro"
			],
			[
				"MICOW",
				"MICOWlanGetIPStatus	macro"
			],
			[
				"MICOWl",
				"MICOWlanGetIPStatus	macro"
			],
			[
				"MICOWlanGe",
				"MICOWlanGetIPStatus	macro"
			],
			[
				"MICOWlanStart",
				"MICOWlanStartAdv	macro"
			],
			[
				"MICO",
				"MICO_NO_WAIT	macro"
			],
			[
				"micoGet",
				"micoGetMemoryInfo	macro"
			],
			[
				"DEF",
				"DEFAULT_REMOTE_UDP_PORT	macro"
			],
			[
				"send",
				"sendto(int sockfd, const void *buf, unsigned int len, int flags, const struct sockaddr_t *dest_addr, socklen_t addrlen)	int"
			],
			[
				"DHCP",
				"DHCP_Disable	DHCPOperationMode"
			],
			[
				"DHC",
				"DHCP_Client	DHCPOperationMode"
			],
			[
				"b",
				"BundleSeedID	char [32]"
			],
			[
				"ma",
				"manufacturer	char [32]"
			],
			[
				"n",
				"name	char [32]"
			],
			[
				"uin",
				"uint8_t	typedef"
			],
			[
				"Platform",
				"PlatformWDGReload()	void"
			],
			[
				"RE",
				"REMOTE_CONNECT	enum <anonymous>"
			],
			[
				"_us",
				"_uart_send_mutex	mico_mutex_t"
			],
			[
				"requi",
				"require(X, LABEL)	macro"
			],
			[
				"_uart",
				"_uart_send_mutex	mico_mutex_t"
			],
			[
				"mico_rtos_init_s",
				"mico_rtos_init_semaphore(mico_semaphore_t *semaphore, int count)	MxchipStatus"
			],
			[
				"mico_rtosge",
				"mico_rtos_get_semaphore(mico_semaphore_t *semaphore, unsigned int timeout_ms)	MxchipStatus"
			],
			[
				"MICO_",
				"MICO_NEVER_TIMEOUT	macro"
			],
			[
				"eState_",
				"eState_Wlan_Powerdown	SYS_State_t"
			],
			[
				"plat",
				"PlatformUartIn"
			],
			[
				"memc",
				"memcmp(const void *, const void *, size_t)	int"
			],
			[
				"re",
				"require_noerr(ERR, LABEL)	macro"
			],
			[
				"mico_rtos",
				"mico_rtos_init_mutex(mico_mutex_t *mutex)	MxchipStatus"
			],
			[
				"mico_t",
				"mico_mutex_t	typedef"
			],
			[
				"mico_rt",
				"mico_rtos_set_semaphore(mico_semaphore_t *semaphore)	MxchipStatus"
			],
			[
				"DE",
				"DEAFULT_REMOTE_SERVER	macro"
			],
			[
				"fl",
				"flashContentInRam	flash_content_t"
			],
			[
				"kNo",
				"kNoErr	macro"
			],
			[
				"lo",
				"localTcpClient_fd	int *"
			],
			[
				"PlatformFlash",
				"PlatformFlashWrite(volatile uint32_t *FlashAddress, uint32_t *Data, uint32_t DataLength)	OSStatus"
			],
			[
				"Platformf",
				"PlatformFlashInitialize()	OSStatus"
			],
			[
				"kc",
				"kChecksumErr	macro"
			],
			[
				"kun",
				"kUnknownErr	macro"
			],
			[
				"kC",
				"kChecksumErr	macro"
			],
			[
				"f",
				"flashContentInRam	flash_content_t"
			],
			[
				"fla",
				"flashContentInRam	flash_content_t"
			],
			[
				"mico_l",
				"mico_log(M, ...)	macro"
			],
			[
				"Button_STANDBY_",
				"Button_STANDBY_PIN	macro"
			],
			[
				"GPIO_Read",
				"GPIO_ReadInputDataBit(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)	uint8_t"
			],
			[
				"easylink",
				"easylinkClient_fd	int"
			],
			[
				"mico_rtos_set",
				"mico_rtos_set_semaphore(mico_semaphore_t *semaphore)	MxchipStatus"
			],
			[
				"es",
				"eState_Software_Reset	SYS_State_t"
			],
			[
				"mico_rtos_init_",
				"mico_rtos_init_semaphore(mico_semaphore_t *semaphore, int count)	MxchipStatus"
			],
			[
				"mico_s",
				"mico_semaphore_t	typedef"
			],
			[
				"e",
				"easyLinkSkip	bool"
			],
			[
				"require_noerr",
				"require_noerr_action(ERR, LABEL, ACTION)	macro"
			],
			[
				"DH",
				"DHCP_Client	DHCPOperationMode"
			],
			[
				"kn",
				"kNoErr	macro"
			],
			[
				"requ",
				"require(X, LABEL)	macro"
			],
			[
				"l",
				"localIp	char [16]"
			],
			[
				"ip",
				"local_ip_addr	char [16]"
			],
			[
				"int",
				"int32_t	typedef"
			],
			[
				"d",
				"dhcpEnable	bool"
			],
			[
				"inet",
				"inet_ntoa(char *s, unsigned int x)	char *"
			],
			[
				"a",
				"allConfigured	config_type"
			],
			[
				"Clos",
				"CloseEasylink2()	int"
			],
			[
				"mico_notify_WIFI_S",
				"mico_notify_WIFI_STATUS_CHANGED	mico_notify_types_t"
			],
			[
				"us",
				"user_key	char [64]"
			],
			[
				"u",
				"user_key	char [64]"
			],
			[
				"key",
				"key_len	int"
			],
			[
				"MX",
				"MXCHIP_SUCCESS	MxchipStatus"
			],
			[
				"require_",
				"require_action(X, LABEL, ACTION)	macro"
			],
			[
				"strn",
				"strncpy(char *restrict, const char *restrict, size_t)	char *"
			],
			[
				"__str",
				"__strdup_trans_dot(char *src)	char *"
			],
			[
				"temp",
				"temp2	WiFi_Status_Notify *"
			],
			[
				"kOper",
				"kNotPreparedErr	macro"
			],
			[
				"mico_rtos_i",
				"mico_rtos_init_mutex(mico_mutex_t *mutex)	MxchipStatus"
			],
			[
				"kU",
				"kUnknownErr	macro"
			],
			[
				"in",
				"inContext"
			],
			[
				"mico_rtos_ge",
				"mico_rtos_get_semaphore(mico_semaphore_t *semaphore, unsigned int timeout_ms)	MxchipStatus"
			],
			[
				"t",
				"txt_att	char *"
			],
			[
				"MF",
				"MFi_SERVICE_MFi	macro"
			],
			[
				"mico_rtos_de",
				"mico_rtos_delete_thread(mico_thread_t *thread)	MxchipStatus"
			],
			[
				"mico_re",
				"mico_rtos_init_mutex(mico_mutex_t *mutex)	MxchipStatus"
			],
			[
				"E",
				"ENABLE	FunctionalState"
			],
			[
				"ea",
				"eaBundleSeedID	char *"
			],
			[
				"support",
				"supports5GHzWiFi	bool"
			],
			[
				"supportsAirp",
				"supportsAirPrint	bool"
			],
			[
				"w",
				"supportsWakeOnWireless	bool"
			],
			[
				"wi",
				"wifi_key	char [32]"
			],
			[
				"WAC_N",
				"WAC_NetConfig	network_InitTypeDef_st *"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/Users/William/Develop/MiCO/Platform/MCU/STM32F4xx/peripherals/platform_flash.c",
			"settings":
			{
				"buffer_size": 18727,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/Users/William/Develop/MiCO/MICO/Library/MICOConfig.c",
			"settings":
			{
				"buffer_size": 2484,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Searching 1883 files for \"__NVIC_PRIO_BITS\"\n\n/Users/William/Develop/MiCO/Platform/BoardConfig/FRDM_K64/device/MK64F12/MK64F12.h:\n  278  \n  279  #define __MPU_PRESENT                  0         /**< Defines if an MPU is present or not */\n  280: #define __NVIC_PRIO_BITS               4         /**< Number of priority bits implemented in the NVIC */\n  281  #define __Vendor_SysTickConfig         0         /**< Vendor specific implementation of SysTickConfig is defined */\n  282  #define __FPU_PRESENT                  1         /**< Defines if an FPU is present or not */\n\n/Users/William/Develop/MiCO/Platform/Cortex-M3/CMSIS/core_cm3.h:\n  167    #endif\n  168  \n  169:   #ifndef __NVIC_PRIO_BITS\n  170:     #define __NVIC_PRIO_BITS          4\n  171:     #warning \"__NVIC_PRIO_BITS not defined in device header file; using default!\"\n  172    #endif\n  173  \n  ...\n 1296    Only values from 0..7 are used.\n 1297    In case of a conflict between priority grouping and available\n 1298:   priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.\n 1299  \n 1300      \\param [in]      PriorityGroup  Priority grouping field.\n ....\n 1417  {\n 1418    if(IRQn < 0) {\n 1419:     SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */\n 1420    else {\n 1421:     NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */\n 1422  }\n 1423  \n ....\n 1438  \n 1439    if(IRQn < 0) {\n 1440:     return((uint32_t)(SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] >> (8 - __NVIC_PRIO_BITS)));  } /* get priority for Cortex-M  system interrupts */\n 1441    else {\n 1442:     return((uint32_t)(NVIC->IP[(uint32_t)(IRQn)]           >> (8 - __NVIC_PRIO_BITS)));  } /* get priority for device specific interrupts  */\n 1443  }\n 1444  \n ....\n 1449      preemptive priority value, and subpriority value.\n 1450      In case of a conflict between priority grouping and available\n 1451:     priority bits (__NVIC_PRIO_BITS), the samllest possible priority group is set.\n 1452  \n 1453      \\param [in]     PriorityGroup  Used priority group.\n ....\n 1462    uint32_t SubPriorityBits;\n 1463  \n 1464:   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - PriorityGroupTmp;\n 1465:   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __NVIC_PRIO_BITS;\n 1466  \n 1467    return (\n ....\n 1477      preemptive priority value and subpriority value.\n 1478      In case of a conflict between priority grouping and available\n 1479:     priority bits (__NVIC_PRIO_BITS) the samllest possible priority group is set.\n 1480  \n 1481      \\param [in]         Priority   Priority value, which can be retrieved with the function \\ref NVIC_GetPriority().\n ....\n 1490    uint32_t SubPriorityBits;\n 1491  \n 1492:   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - PriorityGroupTmp;\n 1493:   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __NVIC_PRIO_BITS;\n 1494  \n 1495    *pPreemptPriority = (Priority >> SubPriorityBits) & ((1 << (PreemptPriorityBits)) - 1);\n ....\n 1546  \n 1547    SysTick->LOAD  = ticks - 1;                                  /* set reload register */\n 1548:   NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Systick Interrupt */\n 1549    SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */\n 1550    SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |\n\n/Users/William/Develop/MiCO/Platform/Cortex-M4/CMSIS/core_cm4.h:\n  180    #endif\n  181  \n  182:   #ifndef __NVIC_PRIO_BITS\n  183:     #define __NVIC_PRIO_BITS          4\n  184:     #warning \"__NVIC_PRIO_BITS not defined in device header file; using default!\"\n  185    #endif\n  186  \n  ...\n 1414    Only values from 0..7 are used.\n 1415    In case of a conflict between priority grouping and available\n 1416:   priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.\n 1417  \n 1418      \\param [in]      PriorityGroup  Priority grouping field.\n ....\n 1536  {\n 1537    if(IRQn < 0) {\n 1538:     SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */\n 1539    else {\n 1540:     NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */\n 1541  }\n 1542  \n ....\n 1557  \n 1558    if(IRQn < 0) {\n 1559:     return((uint32_t)(SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] >> (8 - __NVIC_PRIO_BITS)));  } /* get priority for Cortex-M  system interrupts */\n 1560    else {\n 1561:     return((uint32_t)(NVIC->IP[(uint32_t)(IRQn)]           >> (8 - __NVIC_PRIO_BITS)));  } /* get priority for device specific interrupts  */\n 1562  }\n 1563  \n ....\n 1568      preemptive priority value, and subpriority value.\n 1569      In case of a conflict between priority grouping and available\n 1570:     priority bits (__NVIC_PRIO_BITS), the samllest possible priority group is set.\n 1571  \n 1572      \\param [in]     PriorityGroup  Used priority group.\n ....\n 1581    uint32_t SubPriorityBits;\n 1582  \n 1583:   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - PriorityGroupTmp;\n 1584:   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __NVIC_PRIO_BITS;\n 1585  \n 1586    return (\n ....\n 1596      preemptive priority value and subpriority value.\n 1597      In case of a conflict between priority grouping and available\n 1598:     priority bits (__NVIC_PRIO_BITS) the samllest possible priority group is set.\n 1599  \n 1600      \\param [in]         Priority   Priority value, which can be retrieved with the function \\ref NVIC_GetPriority().\n ....\n 1609    uint32_t SubPriorityBits;\n 1610  \n 1611:   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - PriorityGroupTmp;\n 1612:   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __NVIC_PRIO_BITS;\n 1613  \n 1614    *pPreemptPriority = (Priority >> SubPriorityBits) & (((uint32_t)1 << (PreemptPriorityBits)) - 1);\n ....\n 1665  \n 1666    SysTick->LOAD  = (ticks & SysTick_LOAD_RELOAD_Msk) - 1;      /* set reload register */\n 1667:   NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Systick Interrupt */\n 1668    SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */\n 1669    SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |\n\n/Users/William/Develop/MiCO/Platform/MCU/ATSAMG55/platform_init.c:\n  202    }\n  203    \n  204:   NVIC_SetPriorityGrouping( 7 - __NVIC_PRIO_BITS );\n  205  \n  206    /* Initialise the interrupt priorities to a priority lower than 0 so that the BASEPRI register can mask them */\n  207    NVIC_SetPriority(SVCall_IRQn,                 0);\n  208    NVIC_SetPriority(DebugMonitor_IRQn,           0);\n  209:   NVIC_SetPriority(PendSV_IRQn,                 ((1 << __NVIC_PRIO_BITS) - 1));\n  210:   NVIC_SetPriority(SysTick_IRQn,                ((1 << __NVIC_PRIO_BITS) - 1));\n  211    \n  212    /*\n\n/Users/William/Develop/MiCO/Platform/MCU/ATSAMG55/peripherals/Libraries/asf-3.22.0/sam/utils/cmsis/samg/samg51/include/samg51g18.h:\n  256  #define __MPU_PRESENT          1      /**< SAMG51G18 does provide a MPU */\n  257  #define __FPU_PRESENT          1      /**< SAMG51G18 does provide a FPU */\n  258: #define __NVIC_PRIO_BITS       4      /**< SAMG51G18 uses 4 Bits for the Priority Levels */\n  259  #define __Vendor_SysTickConfig 0      /**< Set to 1 if different SysTick Config is used */\n  260  \n\n/Users/William/Develop/MiCO/Platform/MCU/ATSAMG55/peripherals/Libraries/asf-3.22.0/sam/utils/cmsis/samg/samg53/include/samg53g19.h:\n  269  #define __MPU_PRESENT          1      /**< SAMG53G19 does provide a MPU */\n  270  #define __FPU_PRESENT          1      /**< SAMG53G19 does provide a FPU */\n  271: #define __NVIC_PRIO_BITS       4      /**< SAMG53G19 uses 4 Bits for the Priority Levels */\n  272  #define __Vendor_SysTickConfig 0      /**< Set to 1 if different SysTick Config is used */\n  273  \n\n/Users/William/Develop/MiCO/Platform/MCU/ATSAMG55/peripherals/Libraries/asf-3.22.0/sam/utils/cmsis/samg/samg53/include/samg53n19.h:\n  269  #define __MPU_PRESENT          1      /**< SAMG53N19 does not provide a MPU */\n  270  #define __FPU_PRESENT          1      /**< SAMG53N19 does provide a FPU */\n  271: #define __NVIC_PRIO_BITS       4      /**< SAMG53N19 uses 4 Bits for the Priority Levels */\n  272  #define __Vendor_SysTickConfig 0      /**< Set to 1 if different SysTick Config is used */\n  273  \n\n/Users/William/Develop/MiCO/Platform/MCU/ATSAMG55/peripherals/Libraries/asf-3.22.0/sam/utils/cmsis/samg/samg54/include/samg54g19.h:\n  269  #define __MPU_PRESENT          1      /**< SAMG54G19 does provide a MPU */\n  270  #define __FPU_PRESENT          1      /**< SAMG54G19 does provide a FPU */\n  271: #define __NVIC_PRIO_BITS       4      /**< SAMG54G19 uses 4 Bits for the Priority Levels */\n  272  #define __Vendor_SysTickConfig 0      /**< Set to 1 if different SysTick Config is used */\n  273  \n\n/Users/William/Develop/MiCO/Platform/MCU/ATSAMG55/peripherals/Libraries/asf-3.22.0/sam/utils/cmsis/samg/samg54/include/samg54j19.h:\n  270  #define __MPU_PRESENT          1      /**< SAMG54J19 does provide a MPU */\n  271  #define __FPU_PRESENT          1      /**< SAMG54J19 does provide a FPU */\n  272: #define __NVIC_PRIO_BITS       4      /**< SAMG54J19 uses 4 Bits for the Priority Levels */\n  273  #define __Vendor_SysTickConfig 0      /**< Set to 1 if different SysTick Config is used */\n  274  \n\n/Users/William/Develop/MiCO/Platform/MCU/ATSAMG55/peripherals/Libraries/asf-3.22.0/sam/utils/cmsis/samg/samg54/include/samg54n19.h:\n  271  #define __MPU_PRESENT          1      /**< SAMG54N19 does provide a MPU */\n  272  #define __FPU_PRESENT          1      /**< SAMG54N19 does provide a FPU */\n  273: #define __NVIC_PRIO_BITS       4      /**< SAMG54N19 uses 4 Bits for the Priority Levels */\n  274  #define __Vendor_SysTickConfig 0      /**< Set to 1 if different SysTick Config is used */\n  275  \n\n/Users/William/Develop/MiCO/Platform/MCU/ATSAMG55/peripherals/Libraries/asf-3.22.0/sam/utils/cmsis/samg/samg55/include/samg55g18.h:\n  319  #define __MPU_PRESENT          1      /**< SAMG55G18 does provide a MPU */\n  320  #define __FPU_PRESENT          1      /**< SAMG55G18 does provide a FPU */\n  321: #define __NVIC_PRIO_BITS       4      /**< SAMG55G18 uses 4 Bits for the Priority Levels */\n  322  #define __Vendor_SysTickConfig 0      /**< Set to 1 if different SysTick Config is used */\n  323  \n\n/Users/William/Develop/MiCO/Platform/MCU/ATSAMG55/peripherals/Libraries/asf-3.22.0/sam/utils/cmsis/samg/samg55/include/samg55g19.h:\n  277  #define __MPU_PRESENT          1      /**< SAMG55G19 does provide a MPU */\n  278  #define __FPU_PRESENT          1      /**< SAMG55G19 does provide a FPU */\n  279: #define __NVIC_PRIO_BITS       4      /**< SAMG55G19 uses 4 Bits for the Priority Levels */\n  280  #define __Vendor_SysTickConfig 0      /**< Set to 1 if different SysTick Config is used */\n  281  \n\n/Users/William/Develop/MiCO/Platform/MCU/ATSAMG55/peripherals/Libraries/asf-3.22.0/sam/utils/cmsis/samg/samg55/include/samg55j18.h:\n  327  #define __MPU_PRESENT          1      /**< SAMG55J18 does provide a MPU */\n  328  #define __FPU_PRESENT          1      /**< SAMG55J18 does provide a FPU */\n  329: #define __NVIC_PRIO_BITS       4      /**< SAMG55J18 uses 4 Bits for the Priority Levels */\n  330  #define __Vendor_SysTickConfig 0      /**< Set to 1 if different SysTick Config is used */\n  331  \n\n/Users/William/Develop/MiCO/Platform/MCU/ATSAMG55/peripherals/Libraries/asf-3.22.0/sam/utils/cmsis/samg/samg55/include/samg55j19.h:\n  281  #define __MPU_PRESENT          1      /**< SAMG55J19 does provide a MPU */\n  282  #define __FPU_PRESENT          1      /**< SAMG55J19 does provide a FPU */\n  283: #define __NVIC_PRIO_BITS       4      /**< SAMG55J19 uses 4 Bits for the Priority Levels */\n  284  #define __Vendor_SysTickConfig 0      /**< Set to 1 if different SysTick Config is used */\n  285  \n\n/Users/William/Develop/MiCO/Platform/MCU/ATSAMG55/peripherals/Libraries/asf-3.22.0/sam/utils/cmsis/samg/samg55/include/samg55n19.h:\n  327  #define __MPU_PRESENT          1      /**< SAMG55N19 does provide a MPU */\n  328  #define __FPU_PRESENT          1      /**< SAMG55N19 does provide a FPU */\n  329: #define __NVIC_PRIO_BITS       4      /**< SAMG55N19 uses 4 Bits for the Priority Levels */\n  330  #define __Vendor_SysTickConfig 0      /**< Set to 1 if different SysTick Config is used */\n  331  \n\n/Users/William/Develop/MiCO/Platform/MCU/MX1101/platform_init.c:\n  201  void init_architecture( void )\n  202  { \n  203:   NVIC_SetPriorityGrouping(__NVIC_PRIO_BITS + 1);\n  204    \n  205    /* Initialise the interrupt priorities to a priority lower than 0 so that the BASEPRI register can mask them */\n\n/Users/William/Develop/MiCO/Platform/MCU/MX1101/peripherals/Libraries/inc/AP80xx.h:\n  135  #define __CM3_REV                 0x0200  /*!< Core Revision r2p0                            */\n  136  #define __MPU_PRESENT             1       /*!< STM32F2XX provides an MPU                     */\n  137: #define __NVIC_PRIO_BITS          3       /*!< STM32F2XX uses 3 Bits for the Priority Levels */\n  138  #define __Vendor_SysTickConfig    0       /*!< Set to 1 if different SysTick Config is used  */\n  139  \n\n/Users/William/Develop/MiCO/Platform/MCU/MX1101/peripherals/Libraries/inc/irqs.h:\n   26   * define SOC priority bits depend on the specific family\n   27   */\n   28: #define	__NVIC_PRIO_BITS	(3)\n   29  \n   30  typedef enum IRQn\n   ..\n   65  \n   66  #define	IRQ_PRIO_HIGHEST	(1)/* 0 for reserved,do not change the highest exteran interrupt priority at will!!!*/\n   67: #define	IRQ_PRIO_LOWEST		((1 << __NVIC_PRIO_BITS) - 1)\n   68  \n   69  typedef enum IRQn_PRIO\n\n/Users/William/Develop/MiCO/Platform/MCU/STM32F2xx/peripherals/Libraries/STM32F2xx_StdPeriph_Driver/inc/stm32f2xx.h:\n  135  #define __CM3_REV                 0x0200  /*!< Core Revision r2p0                            */\n  136  #define __MPU_PRESENT             1       /*!< STM32F2XX provides an MPU                     */\n  137: #define __NVIC_PRIO_BITS          4       /*!< STM32F2XX uses 4 Bits for the Priority Levels */\n  138  #define __Vendor_SysTickConfig    0       /*!< Set to 1 if different SysTick Config is used  */\n  139  \n\n/Users/William/Develop/MiCO/Platform/MCU/STM32F4xx/peripherals/Libraries/stm32f4xx.h:\n  162  #define __CM4_REV                 0x0001  /*!< Core revision r0p1                            */\n  163  #define __MPU_PRESENT             1       /*!< STM32F4XX provides an MPU                     */\n  164: #define __NVIC_PRIO_BITS          4       /*!< STM32F4XX uses 4 Bits for the Priority Levels */\n  165  #define __Vendor_SysTickConfig    0       /*!< Set to 1 if different SysTick Config is used  */\n  166  #define __FPU_PRESENT             1       /*!< FPU present                                   */\n\n/Users/William/Develop/MiCO/Platform/vendor/nxp/LPC54xx/NXP_drivers/chip_540xx/config/cmsis.h:\n   78  #define __CM4_REV                 0x0000	/*!< Cortex-M4 Core Revision                          */\n   79  #define __MPU_PRESENT             0			/*!< MPU present or not                               */\n   80: #define __NVIC_PRIO_BITS          3			/*!< Number of Bits used for Priority Levels          */\n   81  #define __Vendor_SysTickConfig    0			/*!< Set to 1 if different SysTick Config is used     */\n   82  #define __FPU_PRESENT             1\n   ..\n   87  #define __CM0PLUS_REV             0x0000	/*!< Cortex-M0PLUS Core Revision                          */\n   88  #define __MPU_PRESENT             0			/*!< MPU present or not                               */\n   89: #define __NVIC_PRIO_BITS          2			/*!< Number of Bits used for Priority Levels          */\n   90  #define __Vendor_SysTickConfig    0			/*!< Set to 1 if different SysTick Config is used     */\n   91  #define __VTOR_PRESENT            1\n\n61 matches across 21 files\n",
			"settings":
			{
				"buffer_size": 16269,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "/Users/William/Develop/MiCO/Platform/Cortex-M4/CMSIS/core_cm4.h",
			"settings":
			{
				"buffer_size": 106658,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/Users/William/Develop/MiCO/Platform/MCU/STM32F4xx/platform_init.c",
			"settings":
			{
				"buffer_size": 9780,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/Users/William/Develop/MiCO/Platform/MCU/STM32F2xx/platform_init.c",
			"settings":
			{
				"buffer_size": 9716,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/Users/William/Develop/MiCO/Platform/MCU/MX1101/platform_init.c",
			"settings":
			{
				"buffer_size": 11102,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 287.0,
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"",
				"Package Control: Install Package"
			],
			[
				"git",
				"Package Control: Install Package"
			],
			[
				"v",
				"View: Toggle Side Bar"
			],
			[
				"Cscope:Look up symbol",
				"Cscope: Look up symbol"
			],
			[
				":",
				"View: Toggle Tabs"
			],
			[
				":q",
				"Set Syntax: SQL"
			],
			[
				"Package Control: install		",
				"Package Control: Install Package"
			],
			[
				"Snippet: ",
				"Snippet: Lorem ipsum"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 125.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/William/Develop/MiCO/Platform/Cortex-M3/CMSIS/core_cm3.h",
		"/Users/William/Develop/MiCO/Projects/MX1101/COM.MXCHIP.SPP/sublime/COM.MXCHIP.SPP.sublime-project",
		"/Users/William/Develop/MiCO/Board/EMW5088/platform.c",
		"/Users/William/Develop/MiCO/Board/MiCOKit-3088/platform.c",
		"/Users/William/Develop/MiCO/Board/EMW5088/platform.h",
		"/Users/William/Develop/MiCO/Board/MiCOKit-3088/platform.h",
		"/Users/William/Develop/MiCO/include/MicoDrivers/MicoDriverFlash.h",
		"/Users/William/Develop/MiCO/MICO/MICOForceOTA.c",
		"/Users/William/Develop/MiCO/Board/MiCOKit-3162/platform.c",
		"/Users/William/Develop/MiCO/Support/CheckSumUtils.h",
		"/Users/William/Develop/MiCO/Support/HTTPUtils.c",
		"/Users/William/Develop/MiCO/Bootloader/ymodem.c",
		"/Users/William/Develop/MiCO/Support/CheckSumUtils.c",
		"/Users/William/Develop/MiCO/Board/MiCOKit-3165/platform.c",
		"/Users/William/Develop/MiCO/Support/AESUtils.h",
		"/Users/William/Develop/MiCO/Bootloader/Update_for_OTA.c",
		"/Users/William/Develop/MiCO/Demos/COM.ALINK.HA/thread_ota.c",
		"/Users/William/Develop/MiCO/MICO/MICOConfigServer.c",
		"/Users/william/Develop/MiCO/Support/HTTPUtils.h",
		"/Users/william/Develop/MiCO/include/MicoDrivers/MICODriverFlash.h",
		"/Users/William/Develop/MiCO/MICO/MICOEntrance.c",
		"/Users/William/Develop/MiCO/Bootloader/BootloaderEntrance.c",
		"/Users/William/Develop/MiCO/Platform/MCU/mico_platform_common.c",
		"/Users/William/Develop/MiCO/Platform/MCU/MX1101/platform_init.c",
		"/Users/William/Develop/MiCO/Platform/MCU/STM32F4xx/platform_init.c",
		"/Users/William/Develop/MiCO/Platform/MCU/ATSAMG55/platform_init.c",
		"/Users/William/Develop/MiCO/Platform/MCU/ATSAMG55/peripherals/platform_flash.c",
		"/Users/William/Develop/MiCO/Platform/MCU/MX1101/peripherals/platform_flash.c",
		"/Users/William/Develop/MiCO/Platform/Drivers/spi_flash/spi_flash_internal.h",
		"/Users/William/Develop/MiCO/Platform/Drivers/spi_flash/spi_flash.c",
		"/Users/William/Develop/MiCO/Platform/MCU/STM32F2xx/peripherals/Libraries/STM32F2xx_StdPeriph_Driver/inc/stm32f2xx_flash.h",
		"/Users/William/Develop/MiCO/Platform/MCU/STM32F2xx/peripherals/platform_flash.c",
		"/Users/William/Develop/MiCO/MICO/tftp/tftp.h",
		"/Users/william/Develop/MiCO/Board/MiCOKit-F205/platform.h",
		"/Users/William/Develop/MiCO/bootloader/BootloaderEntrance.c",
		"/Users/William/Develop/MiCO/bootloader/menu.c",
		"/Users/william/Develop/MiCO/include/MicoPlatform.h",
		"/Users/william/Develop/MiCO/include/Debug.h",
		"/Users/William/Develop/MiCO/Bootloader/bootloader.h",
		"/Users/william/Develop/MiCO/Platform/MCU/MX1101/peripherals/platform_mcu_peripheral.h",
		"/Users/William/Develop/MiCO/Platform/include/platform_peripheral.h",
		"/Users/William/Develop/MiCO/Platform/MCU/wlan_platform_common.c",
		"/Users/William/Develop/MiCO/Platform/MCU/MX1101/wlan_bus_driver/read_wifi_firmware.c",
		"/Users/William/Develop/MiCO/Platform/MCU/STM32F4xx/peripherals/platform_mcu_peripheral.h",
		"/Users/William/Develop/MiCO/Platform/MCU/ATSAMG55/peripherals/platform_mcu_peripheral.h",
		"/Users/William/Develop/MiCO/Platform/MCU/STM32F2xx/peripherals/platform_mcu_peripheral.h",
		"/Users/William/Develop/MiCO/MICO/Library/RF driver/wlan_firmware.c",
		"/Users/William/Develop/MiCO/Board/MiCOKit-3088/platform_config.h",
		"/Users/William/Develop/MiCO/MICO/MICOParaStorage.c",
		"/Users/William/Develop/MiCO/Platform/MCU/MX1101/peripherals/platform_mcu_peripheral.h",
		"/Users/william/Develop/MiCO/Platform/include/PlatformLogging.h",
		"/Users/William/Develop/MiCO/Platform/Cortex-M3/platform_assert.h",
		"/Users/william/Develop/MiCO/Platform/include/platform_peripheral.h",
		"/Users/William/Develop/MiCO/Platform/MCU/MX1101/peripherals/Libraries/inc/spi_flash.h",
		"/Users/William/Develop/MiCO/Platform/MCU/STM32F2xx/platform_init.c",
		"/Users/William/Develop/MiCO/Platform/Cortex-M4/platform_assert.h",
		"/Users/william/Develop/Clang_lib/ARMCC/include/stdlib.h",
		"/Users/william/Develop/MiCO/Platform/drivers/spi_flash/spi_flash.h",
		"/Users/William/Develop/MiCO/Platform/MCU/MX1101/peripherals/platform_uart.c",
		"/Users/William/Develop/MiCO/Platform/MCU/MX1101/peripherals/Libraries/inc/wakeup.h",
		"/Users/William/Develop/MiCO/Platform/MCU/MX1101/peripherals/Libraries/inc/clk.h",
		"/Users/william/Develop/MiCO/Platform/MCU/MX1101/peripherals/Libraries/inc/type.h",
		"/Users/William/Develop/MiCO/Demos/COM.MXCHIP.BASIC/power_measure/main.c",
		"/Users/William/Develop/MiCO/Platform/MCU/MX1101/peripherals/platform_mcu_powersave.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/AP80xx/MicoDriverUart.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/AP80xx/MicoDriverFlash.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/BoardConfig/LPCXpresso54102/platform.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/AP80xx/AP80xx_Drv/inc/sdio.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/MICO/MICONotificationCenter.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/AP80xx/AP80xx_Drv/inc/irqs.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/COM.MXCHIP.SPP/RemoteTcpClient.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/COM.MXCHIP.SPP/LocalTcpServer.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/support/SocketUtils.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/COM.MXCHIP.SPP/MICOAppEntrance.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Projects/AP80xx/COM.MXCHIP.SPP/sublime/COM.MXCHIP.SPP.sublime-project",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/EMW5000/platform.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/MICO/MICOEntrance.c",
		"/Users/william/Develop/mxchipWNet Pro Demo@EMW316x/include/MicoDrivers/MICODriverGpio.h",
		"/Users/william/Develop/mxchipWNet Pro Demo@EMW316x/Demos/COM.MXCHIP.SPP/MICOAppDefine.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/AP80xx/MicoDriverGpio.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/STM32F2xx/EMW1062_Driver/SPI/wwd_bus.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/STM32F2xx/EMW1062_Driver/SDIO/wlan_bus.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/STM32F2xx/STM32F2xx_Drv/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/AP80xx/MicoDriverCommon_debug.c",
		"/Users/william/Develop/Clang_lib/Include/core_cm3.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/STM32F2xx/STM32F2xx_Drv/STM32F2xx_StdPeriph_Driver/inc/misc.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/STM32F2xx/STM32F2xx_Drv/STM32F2xx_StdPeriph_Driver/src/misc.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/CMSIS/core_cm3.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/STM32F2xx/STM32F2xx_Drv/STM32F2xx_StdPeriph_Driver/inc/stm32f2xx.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/COM.MXCHIP.SPP/MICOAppDefine.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/AP80xx/EMW1062_Driver/SDIO/wlan_bus.c",
		"/Users/William/Desktop/MV_OS_libsrc_20150217/library/os/mach/mv-O18/mach.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/AP80xx/MicoDriverCommon.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/AP80xx/AP80xx_Drv/inc/AP80xx.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/STM32F2xx/EMW1062_Driver/wlan_platform.c",
		"/Users/william/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/AP80xx/AP80xx_Drv/inc/sdio.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/include/MicoWlan.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/AP80xx/EMW1062_Driver/wlan_platform.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/MICO/MICOCli.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/include/MICORTOS.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/STM32F2xx/stm32f2xx_platform.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/STM32F2xx/gpio_irq.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/EMW5000/platform_common_config.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/AP80xx_EVB/platform.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/AP80xx_EVB/platform_common_config.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/EMW5000/platform.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/AP80xx_EVB/platform.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/AP80xx/AP80xx_Drv/inc/gpio.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/MICO/EasyLink/EasyLink.c",
		"/Users/william/Develop/mxchipWNet Pro Demo@EMW316x/Platform/AP80xx_EVB/platform_common_config.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/AP80xx/AP80xx_Drv/inc/uart.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/EMW3162/platform_common_config.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/EMW3162/platform.c",
		"/Users/william/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/AP80xx/EMW1062_Driver/wwd_bus_protocol_interface.h",
		"/Users/William/Library/Application Support/Sublime Text 2/Packages/Compare Side-By-Side/SBSCompare.sublime-settings",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/IDEs/Keil/patch_keil_temp.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/STM32F2xx/MicoDriverUart.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/EMW3165/platform_common_config.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/STM32F2xx/MicoDriverFlash.c",
		"/Users/william/Develop/mxchipWNet Pro Demo@EMW316x/Library/support/Common.h",
		"/Users/william/Develop/mxchipWNet Pro Demo@EMW316x/Library/support/RingBufferUtils.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/AP80xx/MicoDriverMapping.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/STM32F2xx/stm32f2xx_platform.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/MICO_EVB_1/platform_common_config.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/include/MicoDrivers/MicoDriverUart.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/EMW3162/platform.h",
		"/Users/william/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/AP80xx/AP80xx_Drv/inc/type.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/support/Debug.h"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"",
			"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/",
			"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/AP80xx_EVB",
			"",
			"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/AP80xx/AP80xx__Drv",
			"<open folders>",
			"",
			"<open folders>",
			"/Users/william/Develop/E-DICE",
			"",
			"<open folders>",
			"/Volumes/C/develop/MDV-STM32-407/EMB_STM32_407_wifi_lib_V2.0.0/",
			"/Volumes/C/develop/MDV-STM32-407/EMB_STM32_407_wifi_lib_V2.0.0/Project/复件 Data_Send&Recv",
			"/Volumes/C/develop/MDV-STM32-407/EMB_STM32_407_wifi_lib_V2.0.0/Project/STM32F4xx_StdPeriph_Examples"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"__NVIC_PRIO_BITS",
			"CFG_PRIO_BITS",
			"mico_ota_finished",
			"MICO_PARTITION_BOOTLOADER",
			"userContext",
			"crc16_context",
			"HTTPHeaderCreateWithCallback",
			"uint8_t *",
			"AES_ECB_Update",
			"data",
			"CRC16_F",
			"Cal_CRC16",
			"CalChecksum",
			"checksum",
			"crc",
			"MICORestoreMFG",
			"partition",
			"_GetSector",
			"FLASH_Sector_10",
			"generic_sflash_command",
			"tsend",
			"SerialUpload",
			"mico_partitions",
			"FLASH_TYPE_SPI",
			"configContext_t",
			"_configContext_t",
			"configContext_t",
			"flashStorageAddress",
			"MICO_FLASH_FOR_UPDATE",
			"mico_partitions",
			"platform_get_wifi_image",
			"wifi_firmware_image",
			"platform_flash_init",
			"platform_flash_enable_security",
			"MICO_ASSERTION_FAIL_ACTION",
			"Heap_Mem",
			"BME280_SPI_bus_write",
			"MicoFlashInitialize",
			"mico_logic_partition_t",
			"FLASH_NONE_ERR",
			"FlashUnlock",
			"internalFlashWrite",
			"platform_mcu_enter_standby",
			"RtcGetRefCnt",
			"host_platform_power_wifi",
			"SysSetWakeUpSrcInPowerDown",
			"SysGetWakeUpFlag",
			"FSHC_CLK_EN",
			"BOOTLOADER",
			"NO_MICO_RTOS",
			"USE_MICO_SPI_FLASH",
			"MicoSysLed",
			"NVIC_PRIORITYGROUP_4",
			"NVIC_SetPriorityGrouping",
			"NVIC_SetPriorityGrouping\nNVIC_SetPriorityGrouping",
			"NVIC_SetPriorityGrouping",
			"ISPR",
			"ISPR\nISPR",
			"ISPR",
			"NVIC_Init",
			"NVIC_PriorityGroup_4",
			"NVIC",
			"NVIC_Type",
			"NVIC_BASE",
			"NVIC",
			"IRQn_PRIO_TYPE",
			"__NVIC_PRIO_BITS",
			"IRQn_PRIO_TYPE",
			"AIRCR_VECTKEY_MASK",
			"NVIC_PriorityGroup_4",
			"NVIC_PriorityGroupConfig",
			"get_version",
			"micoNotify_WifiStatusHandler",
			"bus_direction_mapping",
			"sdio_prepare_data_transfer",
			"BUS_READ",
			"restart",
			"SDIO_ReadWaitMode_CLK",
			"wiced_bus_flow_controlled",
			"sdio_oob_irq_handler",
			"sdio_prepare_data_transfer",
			"sdio_disable_bus_irq",
			"sdio_enable_bus_irq",
			"SDIO_1_BIT",
			"host_platform_enable_high_speed_sdio",
			"sdio_oob_irq_handler",
			"ClkPorRcToDpll",
			"sdio_transfer_mode_t",
			"SDIO_BLOCK_MODE",
			"host_platform_sdio_transfer",
			"MicoUartGetLengthInBuffer",
			"platform_uart_receive_bytes",
			"platform_uart_receive_bytes\nplatform_uart_receive_bytes",
			"platform_uart_receive_bytes",
			"tx_complete",
			"    BuartInit(config->baud_rate, config->data_width + 5, config->parity, config->stop_bits + 1);\nDATA_WIDTH_9BIT",
			"DATA_WIDTH_9BIT",
			"uart_mapping",
			"host_enable_oob_interrupt",
			"WL_GPIO1",
			"WL_GPIO0",
			"response_expected",
			"host_platform_sdio_transfer",
			"user_data",
			"memcpy",
			"user_data",
			"dma_data_source",
			"dma_data_source\ndma_data_source",
			"dma_data_source",
			"sdio_prepare_data_transfer",
			"sdio_oob_irq_handler",
			"host_platform_get_oob_interrupt_pin",
			"sdio_oob_irq_handler",
			"host_enable_oob_interrupt",
			"IRQ",
			"host_platform_sdio_transfer",
			"sdio_transfer_finished_semaphore",
			"user_data",
			"host_platform_sdio_transfer",
			"    \n",
			");\n",
			"SdioSendCommand",
			"check_string",
			"sdio_prepare_data_transfer",
			"host_platform_sdio_transfer",
			"SDIO_ENUMERATION_TIMEOUT_MS",
			"GpioSdIoConfig",
			"SD_PORT_NUM"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"MICO",
			"MICO_DISABLE_STDIO"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/Users/William/Develop/MiCO/Platform/MCU/STM32F4xx/peripherals/platform_flash.c",
					"settings":
					{
						"buffer_size": 18727,
						"regions":
						{
						},
						"selection":
						[
							[
								10224,
								11074
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4897.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/Users/William/Develop/MiCO/MICO/Library/MICOConfig.c",
					"settings":
					{
						"buffer_size": 2484,
						"regions":
						{
						},
						"selection":
						[
							[
								2267,
								2267
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 493.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"settings":
					{
						"buffer_size": 16269,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										252,
										268
									],
									[
										679,
										695
									],
									[
										715,
										731
									],
									[
										764,
										780
									],
									[
										998,
										1014
									],
									[
										1246,
										1262
									],
									[
										1402,
										1418
									],
									[
										1622,
										1638
									],
									[
										1787,
										1803
									],
									[
										2045,
										2061
									],
									[
										2286,
										2302
									],
									[
										2306,
										2322
									],
									[
										2399,
										2415
									],
									[
										2451,
										2467
									],
									[
										2660,
										2676
									],
									[
										2961,
										2977
									],
									[
										2981,
										2997
									],
									[
										3074,
										3090
									],
									[
										3126,
										3142
									],
									[
										3404,
										3420
									],
									[
										3739,
										3755
									],
									[
										3775,
										3791
									],
									[
										3824,
										3840
									],
									[
										4058,
										4074
									],
									[
										4306,
										4322
									],
									[
										4462,
										4478
									],
									[
										4682,
										4698
									],
									[
										4847,
										4863
									],
									[
										5105,
										5121
									],
									[
										5346,
										5362
									],
									[
										5366,
										5382
									],
									[
										5459,
										5475
									],
									[
										5511,
										5527
									],
									[
										5720,
										5736
									],
									[
										6021,
										6037
									],
									[
										6041,
										6057
									],
									[
										6134,
										6150
									],
									[
										6186,
										6202
									],
									[
										6474,
										6490
									],
									[
										6830,
										6846
									],
									[
										7159,
										7175
									],
									[
										7246,
										7262
									],
									[
										7605,
										7621
									],
									[
										8107,
										8123
									],
									[
										8613,
										8629
									],
									[
										9115,
										9131
									],
									[
										9617,
										9633
									],
									[
										10119,
										10135
									],
									[
										10621,
										10637
									],
									[
										11123,
										11139
									],
									[
										11625,
										11641
									],
									[
										12127,
										12143
									],
									[
										12629,
										12645
									],
									[
										12967,
										12983
									],
									[
										13427,
										13443
									],
									[
										13800,
										13816
									],
									[
										14026,
										14042
									],
									[
										14426,
										14442
									],
									[
										14933,
										14949
									],
									[
										15545,
										15561
									],
									[
										16009,
										16025
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								3746,
								3746
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1107.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/Users/William/Develop/MiCO/Platform/Cortex-M4/CMSIS/core_cm4.h",
					"settings":
					{
						"buffer_size": 106658,
						"regions":
						{
						},
						"selection":
						[
							[
								7014,
								6857
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2657.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/Users/William/Develop/MiCO/Platform/MCU/STM32F4xx/platform_init.c",
					"settings":
					{
						"buffer_size": 9780,
						"regions":
						{
						},
						"selection":
						[
							[
								3176,
								3176
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1162.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/Users/William/Develop/MiCO/Platform/MCU/STM32F2xx/platform_init.c",
					"settings":
					{
						"buffer_size": 9716,
						"regions":
						{
						},
						"selection":
						[
							[
								3176,
								3176
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1269.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/Users/William/Develop/MiCO/Platform/MCU/MX1101/platform_init.c",
					"settings":
					{
						"buffer_size": 11102,
						"regions":
						{
						},
						"selection":
						[
							[
								3286,
								3286
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1356.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.clang":
	{
		"height": 125.0
	},
	"output.exec":
	{
		"height": 100.0
	},
	"output.git":
	{
		"height": 100.0
	},
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"micode",
				"MICO/MICODefine.h"
			],
			[
				"",
				"STM32F2xx_StdPeriph_Driver/src/stm32f2xx_i2c.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 326.0,
	"status_bar_visible": true
}
